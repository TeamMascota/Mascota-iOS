disabled_rules: # rule identifiers to exclude from running
  - large_tuple
  - type_body_length
  - file_length
  - trailing_whitespace
  - unused_setter_value
  - empty_count

excluded:
  - Pods
  - Mascota/AppDelegate.swift
  - Mascota/SceneDelegate.swift

opt_in_rules: # some rules are only opt-in
  - explicit_init
  - closure_spacing
  - redundant_nil_coalescing
  - nimble_operator
  - attributes
  - operator_usage_whitespace
  - closure_end_indentation
  - first_where
  - sorted_imports
  - prohibited_super_call
  - fatal_error_message
  - vertical_parameter_alignment_on_call
  - let_var_whitespace
  - unneeded_parentheses_in_closure_argument
  - extension_access_modifier
  - pattern_matching_keywords
  - array_init
  - literal_expression_end_indentation

  # Find all the available rules by running:
  # swiftlint rules

# configurable rules can be customized from this configuration file
# binary rules can set their severity level

force_cast: warning # implicitly

force_try:
  severity: warning # explicitly

function_body_length:
  warning: 100
  error: 500

shorthand_operator: warning

function_parameter_count:
  warning: 10
  error: 12

line_length:
  warning: 200
  error: 500

cyclomatic_complexity:
  warning: 20
  error: 70

#type_body_length:
#  warning: 500
#  error: 1200

# or they can set both explicitly
#file_length:
#  warning: 700
#  error: 3000

# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 3 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded: iPhone # excluded via string

nesting:
  type_level: 3

identifier_name:
  min_length: # only min_length
    error: 3 # only error
  excluded: # excluded via string array
    - id
    - URL
    - GlobalAPIKey
    - vc
    - to
    - up
    - r
    - g
    - b
    - me
    - db
    - x
    - y
    - z
    - j
    - i
    - k
    - l
reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji)
